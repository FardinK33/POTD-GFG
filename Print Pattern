//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    vector<string> pattern(int n){
        
        vector<string> s(n);
        int d=1;
    
        for (int i = 0; i < n; i++)
        {
            int dash = 2*i;
            while(dash--){
                s[i] = '-' + s[i];
            }
            
            int count =i+1;
            while(count <=n){
                s[i] += to_string(d) + '*';
                count++; d++;
            }
        }
    
        for (int i = n-1; i >= 0; i--)
        {
            int count = i+1;
            while (count <= n)
            {
                if(count==n){
                    s[i] += to_string(d);
                }else{
                    s[i] += to_string(d) + '*';
                }
                count++; d++;
            }
            
        }
        
        return s;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        
        Solution ob;
        vector<string> ans = ob.pattern(n);
        for(int i = 0;i < n;i++)
            cout<<ans[i]<<"\n";
    }
    return 0;
}
// } Driver Code Ends
